---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: prepare_files
  pull: default
  image: alpine:3.7
  commands:
  - source versions.txt
  - export BACKEND_VERSION
  - export FRONTEND_VERSION
  - echo $${BACKEND_VERSION}
  - echo $${FRONTEND_VERSION}
  - mkdir /tmp/infomark
  - cd /tmp/infomark
  - wget https://github.com/infomark-org/infomark/releases/download/$${BACKEND_VERSION}/infomark.tar.gz
  - tar -xzvf infomark.tar.gz
  - rm infomark.tar.gz
  - cp /tmp/infomark/api.yaml /drone/src/docs/static/swagger/api.yaml
  - cp /tmp/infomark/infomark /drone/src/infomark

- name: build_docs
  pull: never
  image: patwie/hugo:v1
  commands:
  - mkdir /tmp/console_docs
  - ./infomark console utils doc /tmp/console_docs
  - cp -r /tmp/console_docs/* /drone/src/docs/content/guides/console
  - rm /drone/src/infomark
  - rm /drone/src/.infomark.yml
  - cd /drone/src/docs
  - hugo version
  - hugo

- name: publish_pages
  pull: never
  image: patwie/deploy_docs:v1
  commands:
  - /opt/publish.sh

trigger:
  branch:
  - master

---

kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: prepare_files
  pull: default
  image: golang
  commands:
  - source versions.txt
  - export BACKEND_VERSION
  - export FRONTEND_VERSION
  - echo $${BACKEND_VERSION}
  - echo $${FRONTEND_VERSION}
  - go version
  - WORK_DIR=/tmp/infomark
  - rm -rf $${WORK_DIR}
  - mkdir $${WORK_DIR}
  - git clone --depth 1 --single-branch --branch $${BACKEND_TAG} https://github.com/infomark-org/infomark.git $${WORK_DIR}/infomark
  - wget -qO-  https://github.com/infomark-org/infomark-ui/releases/download/$${FRONTEND_TAG}/infomark-ui.tar.gz | tar -xvz
  - cp -r ./build/* $${WORK_DIR}/infomark/static
  - cd $${WORK_DIR}/infomark
  - sed -i 's/"YXZ"/"$${BACKEND_VERSION}"/g' symbol/version.go
  - pkger list
  - pkger
  - go build infomark.go
  - ls -ls
  - cd /tmp/
  - tar -czvf infomark.tar.gz infomark
  - cp /tmp/infomark.tar.gz /drone/src/infomark.tar.gz
  - cd /drone/src

- name: publish_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files:
      - infomark.tar.gz
    checksum:
      - md5
      - sha256
  when:
    event: tag


trigger:
  event:
  - tag
---
kind: signature
hmac: 5085a68166dc8830500de7792bb996907c877934e97eaa15aae05e98ed4779b9

...
